<!DOCTYPE html>
<html>

<head>
    <!-- Basic -->
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <!-- Mobile Metas -->
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <!-- Site Metas -->
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <meta name="author" content="" />

    <title>Home</title>

    <!-- slider stylesheet -->
    <link rel="stylesheet" type="text/css"
        href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
    <!-- bootstrap core css -->
    <link rel="stylesheet" type="text/css" href="stylesheets/bootstrap.css" />
    <!-- font awesome style -->
    <link rel="stylesheet" type="text/css" href="stylesheets/font-awesome.min.css" />

    <!-- Custom styles for this template -->
    <link href="stylesheets/style.css" rel="stylesheet" />
    <!-- responsive style -->
    <link href="stylesheets/responsive.css" rel="stylesheet" />


    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
        }


        header .profile-icon {
            width: 40px;
            height: 40px;
            background-color: white;
            border-radius: 50%;
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .container {
            padding: 20px;
        }

        .filter {
            margin-bottom: 20px;
        }

        .filter input {
            margin-right: 10px;
            padding: 5px;
        }

        .filter button {
            padding: 5px 10px;
            background-color: #007bff;
            color: white;
            border: none;
            cursor: pointer;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            background-color: white;
        }

        table,
        th,
        td {
            border: 1px solid #ccc;
        }

        th,
        td {
            padding: 10px;
            text-align: left;
        }

        .btn {
            color: white;
            padding: 5px 10px;
            border: none;
            cursor: pointer;
        }

        .btn-edit {
            background-color: #007bff;
        }

        .btn-edit:hover {
            background-color: #0056b3;
        }

        .btn-delete {
            background-color: #dc3545;
        }

        .btn-delete:hover {
            background-color: #a71d2a;
        }

        .btn-container {
            display: flex;
            gap: 10px;
        }

        .form-popup {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            border: 1px solid #ccc;
            background-color: white;
            padding: 20px;
            z-index: 1000;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
        }

        .form-popup .form-group {
            margin-bottom: 20px;
        }

        .form-popup .form-group label {
            display: block;
            margin-bottom: 5px;
        }

        .form-popup .form-group input {
            width: 100%;
            padding: 8px;
            box-sizing: border-box;
        }

        .form-popup .btn {
            display: inline-block;
            margin-top: 10px;
        }

        .overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 999;
        }

        .pagination {
            margin-top: 20px;
            text-align: center;
        }

        .pagination button {
            margin: 0 5px;
            padding: 5px 10px;
            cursor: pointer;
        }

        .pagination .page-numbers {
            display: inline-flex;
            gap: 5px;
        }

        .pagination .current-page {
            font-weight: bold;
        }
    </style>
</head>

<body>

    <%-include('../partials/header') %>
    <div class="container">
        <h2>Danh sách căn hộ</h2>

        <div class="filter">
            <label for="filter-ma-can-ho">Mã căn hộ:</label>
            <input type="text" id="filter-ma-can-ho" placeholder="Nhập mã căn hộ">

            <label for="filter-trang-thai">Trạng thái:</label>
            <input type="text" id="filter-trang-thai" placeholder="Nhập trạng thái">

            <button class="btn" onclick="filterData()">Tìm kiếm</button>
        </div>

        <table>
            <thead>
                <tr>
                    <th>Mã căn hộ</th>
                    <th>Địa điểm</th>
                    <th>Họ tên chủ hộ</th>
                    <th>Mã CCCD</th>
                    <th>Diện tích</th>
                    <th>Trạng thái</th>
                    <th>Hành động</th>
                </tr>
            </thead>
            <tbody id="apartmentTableBody">
                <!-- Data will be dynamically loaded here -->
            </tbody>
        </table>

        <div class="pagination">
            <button onclick="previousPage()">Previous</button>
            <span class="page-numbers" id="pageNumbers"></span>
            <button onclick="nextPage()">Next</button>
        </div>
    </div>

    <div class="form-popup" id="editPopup">
        <h2>Sửa thông tin căn hộ</h2>
        <form>
            <div class="form-group">
                <label for="edit-ma-can-ho">Mã căn hộ:</label>
                <input type="text" id="edit-ma-can-ho" disabled>
            </div>

            <div class="form-group">
                <label for="edit-chu-ho">Họ tên chủ hộ:</label>
                <input type="text" id="edit-chu-ho">
            </div>

            <div class="form-group">
                <label for="edit-cccd">Mã CCCD:</label>
                <input type="text" id="edit-cccd">
            </div>

            <button class="btn btn-edit" type="button" onclick="saveEdit()">Lưu</button>
            <button class="btn btn-delete" type="button" onclick="closeEditPopup()">Đóng</button>
        </form>
    </div>

    <div class="overlay" id="overlay"></div>

    <script>
        let apartments = [
            { maCanHo: 'A101', diaDiem: 'Tầng 1', chuHo: 'Nguyễn Văn A', cccd: '123456789012', dienTich: '80m²', trangThai: 'Đang sử dụng' },
            { maCanHo: 'B202', diaDiem: 'Tầng 2', chuHo: null, cccd: null, dienTich: '60m²', trangThai: 'Trống' },
            { maCanHo: 'C303', diaDiem: 'Tầng 3', chuHo: 'Phạm Văn C', cccd: '456789123456', dienTich: '90m²', trangThai: 'Đang sử dụng' },
            { maCanHo: 'D404', diaDiem: 'Tầng 4', chuHo: null, cccd: null, dienTich: '70m²', trangThai: 'Trống' },
            { maCanHo: 'E505', diaDiem: 'Tầng 5', chuHo: 'Lê Thị D', cccd: '654321987654', dienTich: '85m²', trangThai: 'Đang sử dụng' },
            { maCanHo: 'F606', diaDiem: 'Tầng 6', chuHo: null, cccd: null, dienTich: '95m²', trangThai: 'Trống' },
            { maCanHo: 'G707', diaDiem: 'Tầng 7', chuHo: 'Nguyễn Văn E', cccd: '789456123789', dienTich: '88m²', trangThai: 'Đang sử dụng' },
            { maCanHo: 'H808', diaDiem: 'Tầng 8', chuHo: null, cccd: null, dienTich: '75m²', trangThai: 'Trống' },
            { maCanHo: 'I909', diaDiem: 'Tầng 9', chuHo: null, cccd: null, dienTich: '100m²', trangThai: 'Trống' },
            { maCanHo: 'J1010', diaDiem: 'Tầng 10', chuHo: null, cccd: null, dienTich: '110m²', trangThai: 'Trống' },
        ];

        let currentPage = 1;
        const pageSize = 5;

        function renderTable() {
            const tableBody = document.getElementById('apartmentTableBody');
            tableBody.innerHTML = '';

            const startIndex = (currentPage - 1) * pageSize;
            const endIndex = startIndex + pageSize;

            const currentPageData = apartments.slice(startIndex, endIndex);

            currentPageData.forEach(apartment => {
                const row = document.createElement('tr');

                row.innerHTML = `
                <td>${apartment.maCanHo}</td>
                <td>${apartment.diaDiem}</td>
                <td>${apartment.chuHo || 'NULL'}</td>
                <td>${apartment.cccd || 'NULL'}</td>
                <td>${apartment.dienTich}</td>
                <td>${apartment.trangThai}</td>
                <td>
                    <div class="btn-container">
                        <button class="btn btn-edit" onclick="openEditPopup('${apartment.maCanHo}', '${apartment.chuHo}', '${apartment.cccd}', '${apartment.dienTich}')">Edit</button>
                        <button class="btn btn-delete" onclick="resetApartment('${apartment.maCanHo}')">Delete</button>
                    </div>
                </td>
            `;

                tableBody.appendChild(row);
            });
            renderPagination();
        }

        function renderPagination() {
            const pageNumbers = document.getElementById('pageNumbers');
            pageNumbers.innerHTML = '';

            const totalPages = Math.ceil(apartments.length / pageSize);

            for (let i = 1; i <= totalPages; i++) {
                const button = document.createElement('button');
                button.textContent = i;
                button.className = i === currentPage ? 'current-page' : '';
                button.onclick = () => {
                    currentPage = i;
                    renderTable();
                };

                pageNumbers.appendChild(button);

                if (i === 2 && totalPages > 3) {
                    const ellipsis = document.createElement('span');
                    ellipsis.textContent = '...';
                    pageNumbers.appendChild(ellipsis);
                    break;
                }
            }

            if (totalPages > 2) {
                const lastButton = document.createElement('button');
                lastButton.textContent = 'End';
                lastButton.onclick = () => {
                    currentPage = totalPages;
                    renderTable();
                };
                pageNumbers.appendChild(lastButton);
            }
        }

        function filterData() {
            const maCanHo = document.getElementById('filter-ma-can-ho').value.trim();
            const trangThai = document.getElementById('filter-trang-thai').value.trim();

            if (maCanHo) {
                apartments = apartments.filter(apartment => apartment.maCanHo === maCanHo);
            } else if (trangThai) {
                apartments = apartments.filter(apartment => apartment.trangThai === trangThai);
            }

            currentPage = 1;
            renderTable();
        }

        function previousPage() {
            if (currentPage > 1) {
                currentPage--;
                renderTable();
            }
        }

        function nextPage() {
            const totalPages = Math.ceil(apartments.length / pageSize);
            if (currentPage < totalPages) {
                currentPage++;
                renderTable();
            }
        }

        function openEditPopup(maCanHo, chuHo, cccd) {
            document.getElementById('edit-ma-can-ho').value = maCanHo;
            document.getElementById('edit-chu-ho').value = chuHo || '';
            document.getElementById('edit-cccd').value = cccd || '';

            document.getElementById('editPopup').style.display = 'block';
            document.getElementById('overlay').style.display = 'block';
        }

        function closeEditPopup() {
            document.getElementById('editPopup').style.display = 'none';
            document.getElementById('overlay').style.display = 'none';
        }

        function saveEdit() {
            const maCanHo = document.getElementById('edit-ma-can-ho').value;
            const chuHo = document.getElementById('edit-chu-ho').value.trim();
            const cccd = document.getElementById('edit-cccd').value.trim();

            const apartment = apartments.find(apartment => apartment.maCanHo === maCanHo);
            if (apartment) {
                apartment.chuHo = chuHo || null;
                apartment.cccd = cccd || null;
                apartment.trangThai = chuHo && cccd ? 'Đang sử dụng' : 'Trống';
            }

            alert('Thông tin căn hộ đã được cập nhật!');
            closeEditPopup();
            renderTable();
        }

        function resetApartment(maCanHo) {
            const apartment = apartments.find(apartment => apartment.maCanHo === maCanHo);
            if (apartment) {
                apartment.chuHo = null;
                apartment.cccd = null;
                apartment.trangThai = 'Trống';
            }
            alert(`Căn hộ ${maCanHo} đã được reset về trạng thái ban đầu!`);
            renderTable();
        }

        renderTable();
    </script>


    <%-include('../partials/footer_infosection') %>


    <script src="javascripts/jquery-3.4.1.min.js"></script>
    <script src="javascripts/bootstrap.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js">
    </script>
    <script src="javascripts/custom.js"></script>



</body>

</html>