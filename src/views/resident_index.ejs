<!DOCTYPE html>
<html>

<head>
  <!-- Basic -->
  <meta charset="utf-8" />
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <!-- Mobile Metas -->
  <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no" />
  <!-- Site Metas -->
  <meta name="keywords" content="" />
  <meta name="description" content="" />
  <meta name="author" content="" />

  <title>Home</title>

  <!-- slider stylesheet -->
  <link rel="stylesheet" type="text/css"
    href="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/assets/owl.carousel.min.css" />
  <!-- bootstrap core css -->
  <link rel="stylesheet" type="text/css" href="stylesheets/bootstrap.css" />
  <!-- font awesome style -->
  <link rel="stylesheet" type="text/css" href="stylesheets/font-awesome.min.css" />

  <!-- Custom styles for this template -->
  <link href="stylesheets/style.css" rel="stylesheet" />
  <!-- responsive style -->
  <link href="stylesheets/responsive.css" rel="stylesheet" />


  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
  <style>
    body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
    }

    
    header .profile-icon {
        width: 40px;
        height: 40px;
        background-color: white;
        border-radius: 50%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .container {
        padding: 20px;
    }

    .filter {
        margin-bottom: 20px;
    }

    .filter input {
        margin-right: 10px;
        padding: 5px;
    }

    .filter button {
        padding: 5px 10px;
        background-color: #007bff;
        color: white;
        border: none;
        cursor: pointer;
    }

    table {
        width: 100%;
        border-collapse: collapse;
    }

    table, th, td {
        border: 1px solid #ccc;
    }

    th, td {
        padding: 10px;
        text-align: left;
    }

    .btn {
        color: white;
        padding: 5px 10px;
        border: none;
        cursor: pointer;
    }

    .btn-edit {
        background-color: #007bff;
    }

    .btn-edit:hover {
        background-color: #0056b3;
    }

    .btn-delete {
        background-color: #dc3545;
    }

    .btn-delete:hover {
        background-color: #a71d2a;
    }

    .btn-container {
        display: flex;
        gap: 10px;
    }

    .form-popup {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        border: 1px solid #ccc;
        background-color: white;
        padding: 20px;
        z-index: 1000;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
    }

    .form-popup .form-group {
        margin-bottom: 20px;
    }

    .form-popup .form-group label {
        display: block;
        margin-bottom: 5px;
    }

    .form-popup .form-group input {
        width: 100%;
        padding: 8px;
        box-sizing: border-box;
    }

    .form-popup .btn {
        display: inline-block;
        margin-top: 10px;
    }

    .overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

    .pagination {
        margin-top: 20px;
        text-align: center;
    }

    .pagination button {
        margin: 0 5px;
        padding: 5px 10px;
        cursor: pointer;
    }

    .pagination .page-numbers {
        display: inline-flex;
        gap: 5px;
    }

    .pagination .current-page {
        font-weight: bold;
    }
</style>
</head>

<body>
  <%-include('./partials/header') %>
  <div class="container">
    <h2>Danh sách cư dân</h2>

    <!-- Filters -->
    <div class="filter">
      <label for="filter-name">Họ tên:</label>
      <input type="text" id="filter-name" placeholder="Nhập họ tên">

      <label for="filter-cccd">Mã CCCD:</label>
      <input type="text" id="filter-cccd" placeholder="Nhập mã CCCD">

      <button class="btn btn-primary" onclick="filterResidents()">Tìm kiếm</button>
    </div>

    <!-- Add Resident Button -->
    <div class="mt-3">
      <button class="btn btn-add btn-success" onclick="openAddResidentPopup()">Thêm cư dân mới</button>
    </div>

    <!-- Residents Table -->
    <table class="table table-striped mt-3">
      <thead>
        <tr>
          <th>Họ tên</th>
          <th>Ngày sinh</th>
          <th>Giới tính</th>
          <th>Mã CCCD</th>
          <th>Ngày đến</th>
          <th>Ngày đi</th>
          <th>Trạng thái</th>
          <th>Hành động</th>
        </tr>
      </thead>
      <tbody id="residentTableBody">
        <!-- Rows will be rendered dynamically -->
      </tbody>
    </table>

    <!-- Pagination -->
    <div class="pagination">
      <button onclick="previousPage()">Previous</button>
      <span id="pageNumbers"></span>
      <button onclick="nextPage()">Next</button>
    </div>
  </div>

  <!-- Add Resident Popup -->
  <div class="form-popup" id="addResidentPopup" style="display:none;">
    <h2>Thêm cư dân mới</h2>
    <form>
      <div class="form-group">
        <label for="add-name">Họ tên:</label>
        <input type="text" id="add-name" class="form-control">
      </div>
      <div class="form-group">
        <label for="add-dob">Ngày sinh:</label>
        <input type="date" id="add-dob" class="form-control">
      </div>
      <div class="form-group">
        <label for="add-gender">Giới tính:</label>
        <select id="add-gender" class="form-control">
          <option value="Nam">Nam</option>
          <option value="Nữ">Nữ</option>
          <option value="Khác">Khác</option>
        </select>
      </div>
      <div class="form-group">
        <label for="add-cccd">Mã CCCD:</label>
        <input type="text" id="add-cccd" class="form-control">
      </div>
      <div class="form-group">
        <label for="add-arrival">Ngày đến:</label>
        <input type="date" id="add-arrival" class="form-control">
      </div>
      <div class="form-group">
        <label for="add-departure">Ngày đi:</label>
        <input type="date" id="add-departure" class="form-control">
      </div>
      
      <button type="button" class="btn btn-success" onclick="saveNewResident()">Thêm</button>
      <button type="button" class="btn btn-secondary" onclick="closeAddResidentPopup()">Đóng</button>
    </form>
  </div>

  <div class="form-popup" id="editPopup">
    <h2>Sửa thông tin cư dân</h2>
    <form>
        <div class="form-group">
          <label for="edit-name">Họ tên:</label>
          <input type="text" id="edit-name" class="form-control">
        </div>
        <div class="form-group">
          <label for="edit-dob">Ngày sinh:</label>
          <input type="date" id="edit-dob" class="form-control">
        </div>
        <div class="form-group">
          <label for="edit-gender">Giới tính:</label>
          <select id="edit-gender" class="form-control">
            <option value="Nam">Nam</option>
            <option value="Nữ">Nữ</option>
            <option value="Khác">Khác</option>
          </select>
        </div>
        <div class="form-group">
          <label for="edit-cccd">Mã CCCD:</label>
          <input type="text" id="edit-cccd" class="form-control">
        </div>
        <div class="form-group">
          <label for="edit-arrival">Ngày đến:</label>
          <input type="date" id="edit-arrival" class="form-control">
        </div>
        <div class="form-group">
          <label for="edit-departure">Ngày đi:</label>
          <input type="date" id="edit-departure" class="form-control">
        </div>

        <button type="button" class="btn btn-success" onclick="saveEdit()">Lưu</button>
        <button type="button" class="btn btn-secondary" onclick="closeEditPopup()">Đóng</button>
      </form>
</div>

  <!-- Overlay -->
  <div class="overlay" id="overlay" style="display:none;"></div>


<script>
let residents = [
    {
        name: 'Nguyen Van An',
        dob: '1990-05-20',
        gender: 'Nam',
        cccd: '123456789012',
        arrival: '2023-01-10',
        departure: null,
        status: 'Đang ở',
    },
    {
        name: 'Tran Thi Bich',
        dob: '1985-07-15',
        gender: 'Nữ',
        cccd: '987654321098',
        arrival: '2022-08-01',
        departure: '2023-05-15',
        status: 'Đã rời đi',
    },
    {
        name: 'Pham Van Cuong',
        dob: '2000-11-25',
        gender: 'Nam',
        cccd: '456123789045',
        arrival: '2023-03-12',
        departure: null,
        status: 'Đang ở',
    },
    {
        name: 'Le Thi Dung',
        dob: '1995-02-14',
        gender: 'Nữ',
        cccd: '789456123789',
        arrival: '2022-11-22',
        departure: '2023-06-30',
        status: 'Đã rời đi',
    },
    {
        name: 'Hoang Quoc Dat',
        dob: '1992-03-18',
        gender: 'Nam',
        cccd: '321654987032',
        arrival: '2023-07-05',
        departure: null,
        status: 'Đang ở',
    },
    {
        name: 'Dang Thi Thu',
        dob: '1988-09-10',
        gender: 'Nữ',
        cccd: '654789321076',
        arrival: '2023-01-20',
        departure: null,
        status: 'Đang ở',
    },
    {
        name: 'Bui Minh Hai',
        dob: '1998-12-12',
        gender: 'Nam',
        cccd: '852369741258',
        arrival: '2023-04-01',
        departure: null,
        status: 'Đang ở',
    },
    {
        name: 'Nguyen Thu Hang',
        dob: '1993-06-22',
        gender: 'Nữ',
        cccd: '963852741369',
        arrival: '2023-02-14',
        departure: '2023-09-01',
        status: 'Đã rời đi',
    },
    {
        name: 'Pham Quoc Anh',
        dob: '1990-10-05',
        gender: 'Nam',
        cccd: '741258963741',
        arrival: '2023-05-10',
        departure: null,
        status: 'Đang ở',
    },
    {
        name: 'Vu Hai Yen',
        dob: '1999-01-30',
        gender: 'Nữ',
        cccd: '159357852456',
        arrival: '2023-06-01',
        departure: null,
        status: 'Đang ở',
    },
];



    let currentPage = 1;
    const pageSize = 5;

    function renderTable() {
        const tableBody = document.getElementById('residentTableBody');
      tableBody.innerHTML = '';
      const startIndex = (currentPage - 1) * pageSize;
      const currentResidents = residents.slice(startIndex, startIndex + pageSize);

      currentResidents.forEach(resident => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${resident.name}</td>
          <td>${resident.dob}</td>
          <td>${resident.gender}</td>
          <td>${resident.cccd}</td>
          <td>${resident.arrival}</td>
          <td>${resident.departure}</td>
          <td>${resident.status}</td>
          <td>
            <button class="btn btn-primary" onclick="openEditPopup('${resident.name}', '${resident.dob}', '${resident.gender}',
                    '${resident.cccd}', '${resident.arrival}', '${resident.departure}')">Edit</button>
            <button class="btn btn-danger" onclick="deleteResident('${resident.name}')">Delete</button>
          </td>
        `;
        tableBody.appendChild(row);
      });
    
        renderPagination();
    }

    function renderPagination() {
        const pageNumbers = document.getElementById('pageNumbers');
        pageNumbers.innerHTML = '';

        const totalPages = Math.ceil(residents.length / pageSize);

        for (let i = 1; i <= totalPages; i++) {
            const button = document.createElement('button');
            button.textContent = i;
            button.className = i === currentPage ? 'current-page' : '';
            button.onclick = () => {
                currentPage = i;
                renderTable();
            };

            pageNumbers.appendChild(button);

            if (i === 2 && totalPages > 3) {
                const ellipsis = document.createElement('span');
                ellipsis.textContent = '...';
                pageNumbers.appendChild(ellipsis);
                break;
            }
        }

        if (totalPages > 2) {
            const lastButton = document.createElement('button');
            lastButton.textContent = 'End';
            lastButton.onclick = () => {
                currentPage = totalPages;
                renderTable();
            };
            pageNumbers.appendChild(lastButton);
        }
    }

    function filterResidents() {
        const name = document.getElementById('filter-name').value.trim();
        const cccd = document.getElementById('filter-cccd').value.trim();

        if (name) {
            residents = residents.filter(resident => resident.name === name);
        } else if (cccd) {
            residents = residents.filter(resident => resident.cccd === cccd);
        }

        currentPage = 1;
        renderTable();
    }

    function previousPage() {
        if (currentPage > 1) {
            currentPage--;
            renderTable();
        }
    }

    function nextPage() {
        const totalPages = Math.ceil(residents.length / pageSize);
        if (currentPage < totalPages) {
            currentPage++;
            renderTable();
        }
    }
    function openAddResidentPopup() {
      document.getElementById('addResidentPopup').style.display = 'block';
      document.getElementById('overlay').style.display = 'block';
    }

    function closeAddResidentPopup() {
      document.getElementById('addResidentPopup').style.display = 'none';
      document.getElementById('overlay').style.display = 'none';
    }

    function saveNewResident() {
      const name = document.getElementById('add-name').value;
      const dob = document.getElementById('add-dob').value;
      const gender = document.getElementById('add-gender').value;
      const cccd = document.getElementById('add-cccd').value;
      const arrival = document.getElementById('add-arrival').value;
      const departure = document.getElementById('add-departure').value;

    if (!name || !dob) {
        alert('Ten va ngay sinh là bắt buộc!');
        return;
    }

    const newResident = {
        name: name,
        dob: dob, // Default or dynamic value
        gender: gender ,
        cccd: cccd || null,
        arrival: arrival || null,
        departure: departure || null,
        status: departure  ? 'Đang ở' : 'Đã rời đi'
    };

    residents.push(newResident);

    alert('Nhân khẩu mới đã được thêm!');
    closeAddResidentPopup();
    renderTable();
}
// <td>${resident.name}</td>
//           <td>${resident.dob}</td>
//           <td>${resident.gender}</td>
//           <td>${resident.cccd}</td>
//           <td>${resident.arrival}</td>
//           <td>${resident.departure}</td>
//           <td>${resident.status}</td>
    function openEditPopup(name, dob, gender, cccd, arrival, departure) {
        document.getElementById('edit-name').value = name;
        document.getElementById('edit-dob').value = dob ;
        document.getElementById('edit-gender').value = gender ;
        document.getElementById('edit-cccd').value = cccd || '';
        document.getElementById('edit-arrival').value = arrival || '';
        document.getElementById('edit-departure').value = departure || '';

        document.getElementById('editPopup').style.display = 'block';
        document.getElementById('overlay').style.display = 'block';
    }

    function closeEditPopup() {
        document.getElementById('editPopup').style.display = 'none';
        document.getElementById('overlay').style.display = 'none';
    }

    function saveEdit() {
        const name = document.getElementById('edit-name').value;
      const dob = document.getElementById('edit-dob').value;
      const gender = document.getElementById('edit-gender').value;
      const cccd = document.getElementById('edit-cccd').value;
      const arrival = document.getElementById('edit-arrival').value;
      const departure = document.getElementById('edit-departure').value;

    if (!name || !dob) {
        alert('Ten va ngay sinh là bắt buộc!');
        return;
    }
    const resident = residents.find(resident => resident.name === name);
        if (resident) {
            resident.name = name;
            resident.dob = dob;
            resident.gender = gender;
            resident.cccd = cccd || null;
            resident.arrival = arrival || null;
            resident.departure = departure  ;
            resident.status = departure ? 'Đang ở' : 'Đã rời đi';
        }


    alert('Nhân khẩu đã được sửa!');
    closeEditPopup();
    renderTable();
    }

    function deleteResident(name) {
    const index = residents.findIndex(resident => resident.name === name);
    if (index !== -1) {
        const confirmation = confirm(`Bạn có chắc muốn xóa cư dân ${name}?`);
        if (confirmation) {
            residents.splice(index, 1); // Remove the record from the array
            alert(`Cư dân ${name} đã được xóa!`);
            renderTable();
        }
    }
    }


    renderTable();
</script>

  <%-include('./partials/footer_infosection') %>


  <script src="javascripts/jquery-3.4.1.min.js"></script>
  <script src="javascripts/bootstrap.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/OwlCarousel2/2.3.4/owl.carousel.min.js">
  </script>
  <script src="javascripts/custom.js"></script>



</body>

</html>